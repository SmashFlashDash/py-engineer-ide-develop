from ivk import config
from pysnmp.hlapi import ObjectType, ObjectIdentity, Gauge32, Integer, IpAddress, OctetString

class Modem:
    #types: octet string, trap/inform, trap, gauge, integer, counter
    #octet string -> Надо потестить каждый варинат (например ip надо pretty_print и т.д.)
    MESSAGES_TO_MODEM = {
        'agentVersion' : {
            'id' : 1,
            'oid' : '1.3.6.1.3.505.1.0',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Версия СПО модема',
            'default' : None,
        },
        'portEventDestination' : {
            'id' : 2,
            'oid' : '1.3.6.1.3.505.1.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Порт на стороне СПО для отправки инициативных сообщений от модема.',
            'default' : 10162,
            'check' : lambda val: val >= 0 and val <= 65535,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 65535',
        },
        'timerEvent' : {
            'id' : 3,
            'oid' : '1.3.6.1.3.505.1.2',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «таймер». Отправляется через заданные в timerEventInterval интервалы времени на порт portEventDestination. Содержит связанные переменные перечисленные в timerVariables.',
            'default' : None,
        },
        'timerEventOn' : {
            'id' : 4,
            'oid' : '1.3.6.1.3.505.1.2.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения timerEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'timerEventInterval' : {
            'id' : 5,
            'oid' : '1.3.6.1.3.505.1.2.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Значение интервала в миллисекундах для таймера оповещающего СПО о значении заданных переменных. В адрес СПО через заданные данным параметром интервалы времени отправляется сообщение timerEvent со связанными переменными, заданными в timerVariables.\nЕдиница измерения: мс.\nЦена младшего разряда: 1',
            'default' : 1000,
            'check' : lambda val: val >= 50 and val <= 3600000,
            'check_msg' : 'Значение должно находиться в диапазоне 50 — 3600000',
        },
        'timerEventType' : {
            'id' : 6,
            'oid' : '1.3.6.1.3.505.1.2.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения timerEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'timerVariables' : {
            'id' : 7,
            'oid' : '1.3.6.1.3.505.1.2.4',
            'access' : 'R/W',
            'type' : 'OctetString',
            'description' : 'Массив OID переменных, разделенных символом «;», значения которых будут переданы в качестве связанных переменных с событием timerEvent. По умолчанию передаются OID переменных: rxCarrierLock; rxPnLock; rxCarrierOffset; rxSignalPower\nЕдиница измерения: OID',
            'default' : '1.3.6.1.3.505.3.1.3.1;1.3.6.1.3.505.3.1.1;1.3.6.1.3.505.3.1.2', #1.3.6.1.3.505.3.2.1
        },
        'controlNotificationEvent' : {
            'id' : 8,
            'oid' : '1.3.6.1.3.505.1.2.6',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «уведомление о выдаче управляющего воздействия на модем». Может быть использовано для мониторинга и журнализации выдачи управляющих воздействий на модем. Содержит связанные переменные controlNotificationHost, controlNotificationCounter, а также переменные, которые были изменены.',
            'default' : None,
        },
        'controlNotificationEventOn' : {
            'id' : 9,
            'oid' : '1.3.6.1.3.505.1.2.6.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения controlNotificationEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'controlNotificationEventType' : {
            'id' : 10,
            'oid' : '1.3.6.1.3.505.1.2.6.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения controlNotificationEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'controlNotificationHost' : {
            'id' : 11,
            'oid' : '1.3.6.1.3.505.1.2.6.3',
            'access' : 'R',
            'type' : 'IpAddress',
            'description' : 'IP-адрес, с которого было выдано последнее управляющее воздействие.\nЕдиница измерения: OID',
            'default' : '0.0.0.0',
        },
        'controlNotificationCounter' : {
            'id' : 12,
            'oid' : '1.3.6.1.3.505.1.2.6.4',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Счётчик управляющих воздействий.\nЕдиница измерения: OID',
            'default' : 0,
        },
        'txPower' : {
            'id' : 13,
            'oid' : '1.3.6.1.3.505.2.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Мощность сигнала на выходе модема.\nЕдиница измерения: dBm\nЦена младшего разряда: 0,1',
            'default' : 0,
            'check' : lambda val: val >= -1100 and val <= 20,
            'check_msg' : 'Значение должно находиться в диапазоне -1100 — +20',
        },
        'txCurrentCarrierFrequency' : {
            'id' : 14,
            'oid' : '1.3.6.1.3.505.2.1.1',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Текущее значение несущей частоты передающего канала. Складывается из txCarrierFrequency и поправки по Допплеру.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : None,
        },
        'txPowerOn' : {
            'id' : 15,
            'oid' : '1.3.6.1.3.505.2.1.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние выходного сигнала: 0: выключен; 1: включен.',
            'default' : 1,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'txFilterOn' : {
            'id' : 16,
            'oid' : '1.3.6.1.3.505.2.1.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние формирующего фильтра выходного сигнала: 0: выключен; 1: включен.',
            'default' : 1,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'txCarrierFrequency' : {
            'id' : 17,
            'oid' : '1.3.6.1.3.505.2.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Значение несущей частоты запросного канала.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 70000000,
            'check' : lambda val: val >= 62000000 and val <= 78000000,
            'check_msg' : 'Значение должно находиться в диапазоне 62000000 — 78000000',
        },
        'txBandMode' : {
            'id' : 18,
            'oid' : '1.3.6.1.3.505.2.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Переключатель режима работы запросного канала. Может быть одним из следующих вариантов: 0: узкополосный режим работы; 1: широкополосный режим работы.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'txDataRate' : {
            'id' : 19,
            'oid' : '1.3.6.1.3.505.2.4',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Скорость выдачи информации в запросном канале.\nЕдиница измерения: бит/c.\nЦена младшего разряда: 1',
            'default' : 1000,
            'check' : lambda val: val in (1000, 8000),
            'check_msg' : 'Значение должно равняться 1000 или 8000',
        },
        'txPnGoldsCodeA' : {
            'id' : 20,
            'oid' : '1.3.6.1.3.505.2.5',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Начальное состояние регистра A генератора кода Голда запросного канала.',
            'default' : 0,
            'check' : lambda val: val >= 0x0 and val <= 0x3ff,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 3FFh',
        },
        'txPnCodeM' : {
            'id' : 21,
            'oid' : '1.3.6.1.3.505.2.6',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Определяет обратные связи 18 разрядного сдвигового регистра — генератора М- последовательности запросного канала. Единица в соответствующем разряде говорит о наличии обратной связи в формирующем сдвиговом регистре.',
            'default' : 0,
            'check' : lambda val: val >= 0x1 and val <= 0x3ffff,
            'check_msg' : 'Значение должно находиться в диапазоне 1 — 3FFFFh',
        },
        'txImitMode' : {
            'id' : 22,
            'oid' : '1.3.6.1.3.505.2.7',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Режим работы передающего канала: 0: режим запросного канала («Работа»); 1: режим имитации ответного канала ТКС («Имитатор»).',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'txDataFormat' : {
            'id' : 23,
            'oid' : '1.3.6.1.3.505.2.8',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Формат данных передающего канала: 0: NRZ-L.',
            'default' : 0,
            'check' : lambda val: val == 0,
            'check_msg' : 'Значение должно равняться 0',
        },
        'txSendFunctionalCommand' : {
            'id' : 24,
            'oid' : '1.3.6.1.3.505.2.9.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Однократная выдача функциональной команды (ФК) в запросном канале. В случае, если передающий канал занят предыдущей выдачей, при записи возвращается ошибка.',
            'default' : 0,
            'check' : lambda val: val >= 0 and val <= 255,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 255',
        },
        'txFunctionalCommandCounter' : {
            'id' : 25,
            'oid' : '1.3.6.1.3.505.2.9.1.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Значение прямого последовательного счётчика, с которым будет сформирован следующий пакет ФК. После выдачи пакета значение счётчика автоматически увеличится на единицу.',
            'default' : 0,
            'check' : lambda val: val >= 0 and val <= 16383,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 16383',
        },
        'txFunctionalCommandDuration' : {
            'id' : 26,
            'oid' : '1.3.6.1.3.505.2.9.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Длительность выдачи ФК.\nЕдиница измерения: мс.',
            'default' : 0,
            'check' : lambda val: val >= 0 and val <= 1020,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 1020',
        },
        'txSendServiceCommand' : {
            'id' : 27,
            'oid' : '1.3.6.1.3.505.2.9.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Однократная выдача служебной команды (СК) в запросном канале. В случае, если передающий канал занят предыдущей выдачей, при записи возвращается ошибка.',
            'default' : 0,
            'check' : lambda val: val >= 0 and val <= 255,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 255',
        },
        'txServiceCommandCounter' : {
            'id' : 28,
            'oid' : '1.3.6.1.3.505.2.9.3.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Значение прямого последовательного счётчика, с которым будет сформирован следующий пакет СК. После выдачи пакета значение счётчика автоматически увеличится на единицу.',
            'default' : 0,
            'check' : lambda val: val >= 0 and val <= 16383,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 16383',
        },
        'txSendCommandProgramInformation' : {
            'id' : 29,
            'oid' : '1.3.6.1.3.505.2.9.4',
            'access' : 'R/W',
            'type' : 'OctetString',
            'description' : 'Однократная выдача командно-программной информации (КПИ) в запросном канале. В случае, если передающий канал занят предыдущей выдачей, при записи возвращается ошибка. Структура описана в протоколе ИЛВ.',
            'default' : None,
        },
        'txCommandProgramInformationCounter' : {
            'id' : 30,
            'oid' : '1.3.6.1.3.505.2.9.4.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Значение прямого последовательного счётчика, с которым будет сформирован следующий пакет КПИ. После выдачи пакета значение счётчика автоматически увеличится на единицу.',
            'default' : 0,
            'check' : lambda val: val >= 0 and val <= 16383,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 16383',
        },
        'txCommandDeviceAddress' : {
            'id' : 31,
            'oid' : '1.3.6.1.3.505.2.9.5',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Номер линейки ТКС (УЦО) в пакете ФК, СК, КПИ.',
            'default' : 1,
            'check' : lambda val: val in (1, 2),
            'check_msg' : 'Значение должно равняться 1 или 2',
        },
        'txApplyRxDopplerProgram' : {
            'id' : 32,
            'oid' : '1.3.6.1.3.505.2.10',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Режим компенсации Допплеровского смещения частоты в запросном канале. 0: нет компенсации; 1: компенсация по программе Допплера ответного канала (rxDopplerProgram) с коэффициентом 221/240; 2: автоматическая компенсация по отклонению несущей частоты в ответном канале с коэффициентом 221/240.',
            'default' : 0,
            'check' : lambda val: val >= 0 and val <= 2,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 2',
        },
        'rxCarrierFrequency' : {
            'id' : 33,
            'oid' : '1.3.6.1.3.505.3.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Значение несущей частоты ответного канала.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 70000000,
            'check' : lambda val: val >= 62000000 and val <= 78000000,
            'check_msg' : 'Значение должно находиться в диапазоне 62000000 — 78000000',
        },
        'rxSignalPower' : {
            'id' : 34,
            'oid' : '1.3.6.1.3.505.3.1.1',
            'access' : 'R',
            'type' : 'Integer',
            'description' : 'Мощность ответного сигнала.\nЕдиница измерения: dBm\nЦена младшего разряда: 1',
            'default' : None,
        },
        'rxSignalAgc' : {
            'id' : 35,
            'oid' : '1.3.6.1.3.505.3.1.1.1',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Текущее значение усиления входного сигнала в приёмнике модема\nЕдиница измерения: dB\nЦена младшего разряда: 1',
            'default' : None,
            'check' : lambda val: val >= 0 and val <= 96,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 96',
        },
        'rxCarrierOffset' : {
            'id' : 36,
            'oid' : '1.3.6.1.3.505.3.1.2',
            'access' : 'R',
            'type' : 'Integer',
            'description' : 'Отклонение несущей частоты ответного сигнала от значения заданного в rxCarrierFrequency.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : None,
        },
        'rxCarrierLock' : {
            'id' : 37,
            'oid' : '1.3.6.1.3.505.3.1.3',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Захват ответного сигнала по несущей частоте. 0: нет захвата; 1: захват.',
            'default' : None,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxLockStatus' : {
            'id' : 38,
            'oid' : '1.3.6.1.3.505.3.1.3.1',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Трёхразрядное значение с признаками захвата ответного сигнала.  Бит 0: признак захвата по несущей частоте (эквивалент rxCarrierLock); бит 1: признак захвата по PN (эквивалент rxPnLock); бит 2: признак захвата по поднесущей частоте 256 кГц в канале I (для режима УПС). Значение в соответствующем разряде: 0: нет захвата; 1: захват.',
            'default' : None,
            'check' : lambda val: val >= 0x0 and val <= 0x7,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 7h',
        },
        'rxDopplerProgram' : {
            'id' : 39,
            'oid' : '1.3.6.1.3.505.3.1.4',
            'access' : 'R/W',
            'type' : 'OctetString',
            'description' : 'Программа Допплеровского изменения частоты в ответном канале на заданный интервал времени. Структура описана в протоколе ИЛВ.',
            'default' : None,
        },
        'rxDopplerProgramOn' : {
            'id' : 40,
            'oid' : '1.3.6.1.3.505.3.1.4.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Включение программы Допплеровского изменения частоты в ответном канале: 0: программа выключена; 1: программа включена.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDopplerCorrection' : {
            'id' : 41,
            'oid' : '1.3.6.1.3.505.3.1.4.2',
            'access' : 'R/W',
            'type' : 'Integer',
            'description' : 'Допплеровская поправка частоты в ответном канале. Действует в том числе при работе программы Допплера.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 0,
            'check' : lambda val: val >= -100000 and val <= 100000,
            'check_msg' : 'Значение должно находиться в диапазоне -100000 — +100000',
        },
        'rxCurrentCarrierFrequency' : {
            'id' : 42,
            'oid' : '1.3.6.1.3.505.3.1.5',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Текущее значение несущей частоты приемного канала. Используется во время работы программы Допплера.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : None,
        },
        'rxRadialVelocityOn' : {
            'id' : 43,
            'oid' : '1.3.6.1.3.505.3.1.6',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Включение измерений радиальной скорости: 0: измерения выключены; 1: измерения включены.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'radialVelocityData' : {
            'id' : 44,
            'oid' : '1.3.6.1.3.505.3.1.7',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Последнее значение измерения радиальной скорости. Формат описан в протоколе ИЛВ.',
            'default' : None,
        },
        'radialVelocityEvent' : {
            'id' : 45,
            'oid' : '1.3.6.1.3.505.3.1.7.1',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «готовность измерения радиальной скорости». Содержит связанную переменную radialVelocityData.',
            'default' : None,
        },
        'radialVelocityEventOn' : {
            'id' : 46,
            'oid' : '1.3.6.1.3.505.3.1.7.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения radialVelocityEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'radialVelocityEventType' : {
            'id' : 47,
            'oid' : '1.3.6.1.3.505.3.1.7.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения radialVelocityEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxPnMode' : {
            'id' : 48,
            'oid' : '1.3.6.1.3.505.3.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Структура PN ответного сигнала в режиме ШПС . Может быть одним из следующих вариантов: 1: широкополосный режим 1 (дальнометрический, M-последовательность); 2: широкополосный режим 2 (режим «коротких PN», коды Голда).',
            'default' : 2,
            'check' : lambda val: val in (1, 2),
            'check_msg' : 'Значение должно равняться 1 или 2',
        },
        'rxPnLock' : {
            'id' : 49,
            'oid' : '1.3.6.1.3.505.3.2.1',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Захват ответного сигнала по PN. 0: нет захвата; 1: захват.',
            'default' : None,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxPnGoldsCodeA' : {
            'id' : 50,
            'oid' : '1.3.6.1.3.505.3.2.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Начальное состояние регистра A генератора кода Голда ответного канала.',
            'default' : 0,
            'check' : lambda val: val >= 0x0 and val <= 0x7ff,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 7FFh',
        },
        'rxPnGoldsCodeC' : {
            'id' : 51,
            'oid' : '1.3.6.1.3.505.3.2.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Начальное состояние регистра C генератора кода Голда ответного канала.',
            'default' : 0,
            'check' : lambda val: val >= 0x0 and val <= 0x7ff,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 7FFh',
        },
        'rxPnCodeM' : {
            'id' : 52,
            'oid' : '1.3.6.1.3.505.3.2.4',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Определяет обратные связи 18 разрядного сдвигового регистра — генератора М- последовательности ответного канала. Единица в соответствующем разряде говорит о наличии обратной связи в формирующем сдвиговом регистре.',
            'default' : 0,
            'check' : lambda val: val >= 0x1 and val <= 0x3ffff,
            'check_msg' : 'Значение должно находиться в диапазоне 1 — 3FFFFh',
        },
        'rxRangingOn' : {
            'id' : 53,
            'oid' : '1.3.6.1.3.505.3.2.5',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Включение измерений наклонной дальности: 0: измерения выключены; 1: измерения включены.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rangingData' : {
            'id' : 54,
            'oid' : '1.3.6.1.3.505.3.2.6',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Последнее значение измерения наклонной дальности. Формат описан в протоколе ИЛВ.',
            'default' : None,
        },
        'rangingEvent' : {
            'id' : 55,
            'oid' : '1.3.6.1.3.505.3.2.6.1',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «готовность измерения наклонной дальности». Содержит связанную переменную rangingData.',
            'default' : None,
        },
        'rangingEventOn' : {
            'id' : 56,
            'oid' : '1.3.6.1.3.505.3.2.6.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения rangingEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rangingEventType' : {
            'id' : 57,
            'oid' : '1.3.6.1.3.505.3.2.6.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения rangingEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxBandModeI' : {
            'id' : 58,
            'oid' : '1.3.6.1.3.505.3.3.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Переключатель режима работы приемного канала I. Может быть одним из следующих вариантов: 0: узкополосный режим; 1: широкополосный режим.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDataModeI' : {
            'id' : 59,
            'oid' : '1.3.6.1.3.505.3.3.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Режим работы приёмного канала информации I: 0: выключен; 1: приём диагностической информации (ДИ); 2: приём сигналов сверки времени.',
            'default' : 0,
            'check' : lambda val: val in (0, 1, 2),
            'check_msg' : 'Значение должно равняться 0, 1 или 2',
        },
        'rxDataRateI' : {
            'id' : 60,
            'oid' : '1.3.6.1.3.505.3.3.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Скорость информации принимаемой в ответном канале по орте I, в т.ч. ДИ и сигналы сверки времени.\nЕдиница измерения: бит/c.\nЦена младшего разряда: 1',
            'default' : 8000,
            'check' : lambda val: val in (8000, 32000, 64000),
            'check_msg' : 'Значение должно равняться 8000, 32000 или 64000',
        },
        'rxDataConvolutionalCodeI' : {
            'id' : 61,
            'oid' : '1.3.6.1.3.505.3.3.4.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Декодирование сверточного кода в канале I: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDataPseudoRandomizationI' : {
            'id' : 62,
            'oid' : '1.3.6.1.3.505.3.3.4.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Псевдорандомизация данных в канале I: 0: выключена; 1: включена.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDiFrame' : {
            'id' : 63,
            'oid' : '1.3.6.1.3.505.3.3.5',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Последний принятый кадр ДИ. Формат описан в протоколе ИЛВ.',
            'default' : None,
        },
        'rxDiFrameEvent' : {
            'id' : 64,
            'oid' : '1.3.6.1.3.505.3.3.5.1',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «принят кадр ДИ». Содержит связанную переменную rxDiFrame.',
            'default' : None,
        },
        'rxDiFrameEventOn' : {
            'id' : 65,
            'oid' : '1.3.6.1.3.505.3.3.5.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения rxDiFrameEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDiFrameEventType' : {
            'id' : 66,
            'oid' : '1.3.6.1.3.505.3.3.5.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения rxDiFrameEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxBufferedDiFrameCounter' : {
            'id' : 67,
            'oid' : '1.3.6.1.3.505.3.3.5.6',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Определяет номер кадра ДИ для чтения из буфера ДИ. В буфере хранятся последние принятые 16384 кадров ДИ. После чтения кадра из переменной rxBufferedDiFrame значение данной переменной автоматически увеличивается на единицу. При попытке записи в данную переменную значения с номером кадра, которого нет в буфере, агент вернёт ошибку.',
            'default' : 0,
        },
        'rxBufferedDiFrame' : {
            'id' : 68,
            'oid' : '1.3.6.1.3.505.3.3.5.6.1',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Кадр ДИ с номером заданным в rxBufferedDiFrameCounter.',
            'default' : None,
        },
        'rxViterbiDecoderBerI' : {
            'id' : 69,
            'oid' : '1.3.6.1.3.505.3.3.5.7',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Количество ошибок на входе свёрточного декодера Витерби в канале I, приведённое к 2^32 бит информации. Таким образом BER=rxViterbiDecoderBerI/2^32.',
            'default' : None,
        },
        'rxReceivedTime' : {
            'id' : 70,
            'oid' : '1.3.6.1.3.505.3.3.6',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Последняя принятая оцифровка времени БШВ в режиме сверки времени. Формат соответствует описанному в протоколе ТКС — МСКУ.',
            'default' : None,
        },
        'rxReceivedTimeEvent' : {
            'id' : 71,
            'oid' : '1.3.6.1.3.505.3.3.6.1',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «принята оцифровка времени БШВ». Содержит связанную переменную rxReceivedTime.',
            'default' : None,
        },
        'rxReceivedTimeEventOn' : {
            'id' : 72,
            'oid' : '1.3.6.1.3.505.3.3.6.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения rxReceivedTimeEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxReceivedTimeEventType' : {
            'id' : 73,
            'oid' : '1.3.6.1.3.505.3.3.6.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения rxReceivedTimeEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxReceivedSecondDifference' : {
            'id' : 74,
            'oid' : '1.3.6.1.3.505.3.3.7',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Содержит расхождение между секундной меткой модема и последней принятой секундной меткой БШВ.\nЕдиница измерения: мкс.\nЦена младшего разряда: 1',
            'default' : None,
            'check' : lambda val: val >= 0 and val <= 999999,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 999999',
        },
        'rxReceivedSecondEvent' : {
            'id' : 75,
            'oid' : '1.3.6.1.3.505.3.3.8',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «принята секундная метка БШВ». Содержит связанную переменную rxReceivedSecondDifference.',
            'default' : None,
        },
        'rxReceivedSecondEventOn' : {
            'id' : 76,
            'oid' : '1.3.6.1.3.505.3.3.8.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения rxReceivedSecondEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxReceivedSecondEventType' : {
            'id' : 77,
            'oid' : '1.3.6.1.3.505.3.3.8.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения rxReceivedSecondEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxBandModeQ' : {
            'id' : 78,
            'oid' : '1.3.6.1.3.505.3.4.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Переключатель режима работы приемного канала Q. Может быть одним из следующих вариантов: 0: узкополосный режим; 1: широкополосный режим.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDataModeQ' : {
            'id' : 79,
            'oid' : '1.3.6.1.3.505.3.4.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Режим работы приёмного канала информации Q: 0: выключен; 1: приём телеметрической информации (ТМИ).',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDataRateQ' : {
            'id' : 80,
            'oid' : '1.3.6.1.3.505.3.4.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Скорость телеметрической информации в ответном канале Q.\nЕдиница измерения: бит/c.\nЦена младшего разряда: 1',
            'default' : 32000,
            'check' : lambda val: val in (32000, 64000, 128000, 256000),
            'check_msg' : 'Значение должно равняться 32000, 64000, 128000 или 256000',
        },
        'rxDataConvolutionalCodeQ' : {
            'id' : 81,
            'oid' : '1.3.6.1.3.505.3.4.4.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Декодирование сверточного кода в канале Q: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxDataPseudoRandomizationQ' : {
            'id' : 82,
            'oid' : '1.3.6.1.3.505.3.4.4.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Псевдорандомизация данных в канале Q: 0: выключена; 1: включена.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxTmiFrame' : {
            'id' : 83,
            'oid' : '1.3.6.1.3.505.3.4.5',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Последний принятый кадр ТМИ. Формат описан в протоколе ИЛВ.',
            'default' : None,
        },
        'rxTmiFrameEvent' : {
            'id' : 84,
            'oid' : '1.3.6.1.3.505.3.4.5.1',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «принят кадр ТМИ». Содержит связанную переменную rxTmiFrame.',
            'default' : None,
        },
        'rxTmiFrameEventOn' : {
            'id' : 85,
            'oid' : '1.3.6.1.3.505.3.4.5.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения rxTmiFrameEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxTmiFrameEventType' : {
            'id' : 86,
            'oid' : '1.3.6.1.3.505.3.4.5.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения rxTmiFrameEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'rxBufferedTmiFrameCounter' : {
            'id' : 87,
            'oid' : '1.3.6.1.3.505.3.4.5.6',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Определяет номер кадра ТМИ для чтения из буфера ТМИ. В буфере хранятся последние принятые 65536 кадров ДИ. После чтения кадра из переменной rxBufferedTmiFrame значение данной переменной автоматически увеличивается на единицу. При попытке записи в данную переменную значения с номером кадра, которого нет в буфере, агент вернёт ошибку.',
            'default' : 0,
        },
        'rxBufferedTmiFrame' : {
            'id' : 88,
            'oid' : '1.3.6.1.3.505.3.4.5.6.1',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Кадр ТМИ с номером заданным в rxBufferedTmiFrameCounter.',
            'default' : None,
        },
        'rxViterbiDecoderBerQ' : {
            'id' : 89,
            'oid' : '1.3.6.1.3.505.3.4.5.7',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Количество ошибок на входе свёрточного декодера Витерби в канале Q, приведённое к 2^32 бит информации. Таким образом BER=rxViterbiDecoderBerQ/2^32.',
            'default' : None,
        },
        'spectrumAnalyzerFrame' : {
            'id' : 90,
            'oid' : '1.3.6.1.3.505.4.1',
            'access' : 'R',
            'type' : 'OctetString',
            'description' : 'Последний кадр анализатора спектра. Формат описан в протоколе ИЛВ.',
            'default' : None,
        },
        'spectrumAnalyzerFrameReadyEvent' : {
            'id' : 91,
            'oid' : '1.3.6.1.3.505.4.1.1',
            'access' : None,
            'type' : 'trap',
            'description' : 'Событие «готовность кадра анализатора спектра». Содержит связанную переменную spectrumAnalyzerFrame.',
            'default' : None,
        },
        'spectrumAnalyzerFrameReadyEventOn' : {
            'id' : 92,
            'oid' : '1.3.6.1.3.505.4.1.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения spectrumAnalyzerFrameReadyEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'spectrumAnalyzerSpan' : {
            'id' : 93,
            'oid' : '1.3.6.1.3.505.4.1.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Полоса обзора анализатора спектра относительно центральной частоты заданной в rxCarrierFrequency.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 1000000,
            'check' : lambda val: val >= 0 and val <= 125000000,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 125000000',
        },
        'spectrumAnalyzerRbw' : {
            'id' : 94,
            'oid' : '1.3.6.1.3.505.4.1.4.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Полоса разрешающего фильтра (RBW) анализатора спектра. Не может быть меньше, чем spectrumAnalyzerSpan/1024.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 2000,
            'check' : lambda val: val in (15, 30, 60, 120, 250, 500, 1000, 2000, 4000, 8000, 15000, 30000, 60000, 120000, 250000, 500000),
            'check_msg' : 'Значение должно равняться 15, 30, 60, 120, 250, 500, 1000, 2000, 4000, 8000, 15000, 30000, 60000, 120000, 250000 или 500000',
        },
        'spectrumAnalyzerVbw' : {
            'id' : 95,
            'oid' : '1.3.6.1.3.505.4.1.4.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Полоса видео фильтра (VBW) анализатора спектра.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 500,
            'check' : lambda val: val in (15, 30, 60, 120, 250, 500, 1000, 2000, 4000, 8000, 15000, 30000, 60000, 120000, 250000, 500000),
            'check_msg' : 'Значение должно равняться 15, 30, 60, 120, 250, 500, 1000, 2000, 4000, 8000, 15000, 30000, 60000, 120000, 250000 или 500000',
        },
        'spectrumAnalyzerSource' : {
            'id' : 96,
            'oid' : '1.3.6.1.3.505.4.1.5',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Источник сигнала анализатора спектра: 0: входной сигнал; 1: запросный сигнал; 2: I-канал; 3: Q-канал.',
            'default' : 0,
            'check' : lambda val: val in (0, 1, 2, 3),
            'check_msg' : 'Значение должно равняться 0, 1, 2 или 3',
        },
        'spectrumAnalyzerCenter' : {
            'id' : 97,
            'oid' : '1.3.6.1.3.505.4.1.6',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Центральная частота анализатора спектра.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 70000000,
            'check' : lambda val: val >= 62000000 and val <= 78000000,
            'check_msg' : 'Значение должно находиться в диапазоне 62000000 — 78000000',
        },
        'dateTime' : {
            'id' : 98,
            'oid' : '1.3.6.1.3.505.5.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Текущее время в модеме (МШВ). Представляет собой счетчик секунд прошедших с 01.01.1970 г.\nЕдиница измерения: с.\nЦена младшего разряда: 1',
            'default' : None,
        },
        'secondEvent' : {
            'id' : 99,
            'oid' : '1.3.6.1.3.505.5.1.1',
            'access' : None,
            'type' : 'trap/inform',
            'description' : 'Событие «секундная метка». Отправляется при смене секунды МШВ. Содержит связанную переменную dateTime.',
            'default' : None,
        },
        'secondEventOn' : {
            'id' : 100,
            'oid' : '1.3.6.1.3.505.5.1.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Состояние сообщения secondEvent: 0: выключено; 1: включено.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'secondEventType' : {
            'id' : 101,
            'oid' : '1.3.6.1.3.505.5.1.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Тип сообщения secondEvent: 0: trap; 1: inform.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'externalTimeStatus' : {
            'id' : 102,
            'oid' : '1.3.6.1.3.505.5.2.1',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Состояние внешнего источника времени: 0: нет сигнала на входе; 1: сигнал на вход поступает.',
            'default' : None,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'externalTime' : {
            'id' : 103,
            'oid' : '1.3.6.1.3.505.5.2.2',
            'access' : 'R',
            'type' : 'Gauge32',
            'description' : 'Время с внешнего источника, поступающее на вход модема в формате IRIG-B. Представляет собой счетчик секунд прошедших с 01.01.1970 г.\nЕдиница измерения: с.\nЦена младшего разряда: 1',
            'default' : None,
        },
        'externalTimeSync' : {
            'id' : 104,
            'oid' : '1.3.6.1.3.505.5.2.3',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Синхронизация внутреннего времени модема (МШВ) с внешним источником времени. При записи «1» в данную переменную происходит однократная синхронизация.',
            'default' : 0,
            'check' : lambda val: val in (0, 1),
            'check_msg' : 'Значение должно равняться 0 или 1',
        },
        'externalTimeDifference' : {
            'id' : 105,
            'oid' : '1.3.6.1.3.505.5.2.4',
            'access' : 'R',
            'type' : 'Integer',
            'description' : 'Расхождение между секундными метками МШВ и внешнего источника времени.\nЕдиница измерения: мкс.\nЦена младшего разряда: 1',
            'default' : None,
            'check' : lambda val: val >= 0 and val <= 999999,
            'check_msg' : 'Значение должно находиться в диапазоне 0 — 999999',
        },
        'dtrCarrierFrequency' : {
            'id' : 106,
            'oid' : '1.3.6.1.3.505.6.1',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Несущая частота сигнала для приёмника наведения.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 50000000,
            'check' : lambda val: val >= 20000000 and val <= 60000000,
            'check_msg' : 'Значение должно находиться в диапазоне 20000000 — 60000000',
        },
        'dtrFilter' : {
            'id' : 107,
            'oid' : '1.3.6.1.3.505.6.2',
            'access' : 'R/W',
            'type' : 'Gauge32',
            'description' : 'Полоса фильтра сигнала для приёмника наведения.\nЕдиница измерения: Гц.\nЦена младшего разряда: 1',
            'default' : 1000,
            'check' : lambda val: val in (15, 30, 60, 125, 250, 500, 1000),
            'check_msg' : 'Значение должно равняться 15, 30, 60, 125, 250, 500 или 1000',
        },
        'dtrPowerCorrection' : {
            'id' : 108,
            'oid' : '1.3.6.1.3.505.6.3',
            'access' : 'R/W',
            'type' : 'Integer',
            'description' : 'Коррекция по мощности сигнала для приёмника наведения.\nЕдиница измерения: dB\nЦена младшего разряда: 1',
            'default' : 0,
            'check' : lambda val: val in (-48, -42, -36, -30, -24, -18, -12, -6, 0, 6, 12, 18, 24, 30, 36, 42),
            'check_msg' : 'Значение должно равняться -48, -42, -36, -30, -24, -18, -12, -6, 0, 6, 12, 18, 24, 30, 36 или 42',
        }
    }


    @staticmethod
    def MSG(name, *args):
        if name not in Modem.MESSAGES_TO_MODEM:
            raise Exception('Неопознанный код команды "%s"' % name)
        msg = Modem.MESSAGES_TO_MODEM[name]

        if 'trap' in msg['type'] or 'inform' in msg['type']:
            raise Exception('Отправка событий (trap/inform) невозможна')
        
        #Чтение
        if len(args) == 0:
            data = ObjectType(ObjectIdentity(msg['oid']))
            return data, name, msg, 'R'
        #Запись
        elif len(args) == 1:
            if msg['access'] == 'R': 
                raise Exception("Данная команда доступна только для чтения") 
            
            val = args[0] 

            if msg['type'] in ('Integer', 'Gauge32') and not isinstance(val, int):
                raise Exception("Неверный тип значения, передан %s, тредуется int" % type(val).__name__) 
            if msg['type'] == 'IpAddress' and not isinstance(val, str):
                raise Exception("Неверный тип значения, передан %s, тредуется str" % type(val).__name__) 
            if msg['type'] == 'OctetString' and not isinstance(val, str) and not isinstance(val, bytes):
                raise Exception("Неверный тип значения, передан %s, тредуется str или bytes" % type(val).__name__) 
            if 'check' in msg and not msg['check'](val):
                raise Exception(msg['check_msg'])
            
            if msg['type'] == 'Integer':
                val = Integer(val)
            elif msg['type'] == 'Gauge32':
                val = Gauge32(val)
            elif msg['type'] == 'IpAddress':
                val = IpAddress().prettyIn(val)
            elif msg['type'] == 'OctetString':
                val = OctetString(val)
            
            data = ObjectType(ObjectIdentity(msg['oid']), val)
            return data, name, msg, 'W'

        else:
            raise Exception("Должен быть задан только 1 аргумент команды")

        return None, None, None, None

